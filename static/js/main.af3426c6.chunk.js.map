{"version":3,"sources":["editable-stuff/Profile.jpg","components/home/MainBody.jsx","components/home/AboutMe.jsx","components/home/ProjectCard.jsx","components/home/Project.jsx","components/home/Interests.jsx","components/home/Footer.jsx","components/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainBody","useState","Array","icons","length","fill","hoverstatus","setHoverstatus","toggleHover","data","newhoverStatus","event","icon","id","className","FirstName","MiddleName","LastName","devDesc","map","key","target","rel","href","url","aria-label","image","split","onMouseOver","onMouseOut","divStyle","display","flexDirection","alignItems","AboutMe","style","backgroundColor","src","Profile","alt","width","height","aboutHeading","role","Language","value","setData","handleRequest","useCallback","e","axios","get","then","response","catch","error","console","message","finally","useEffect","array","total_count","index","push","language","Math","trunc","ProjectCard","updated_at","setUpdatedAt","handleUpdatetime","date","Date","pushed_at","diff","getTime","hours","toString","day","getDate","monthIndex","getMonth","year","getFullYear","name","description","svn_url","stargazers_count","languages_url","Project","projectsArray","setProjectsArray","gitHubLink","gitHubUsername","gitHubQuerry","slice","projectsLength","projectHeading","project","Interests","fontSize","Footer","Navbar","props","isTop","setIsTop","document","addEventListener","istop","window","scrollY","type","data-toggle","data-target","aria-controls","aria-expanded","Home","App","basename","showNavigationbar","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af3426c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Profile.1210ac5f.jpg\";","import React, { useState } from \"react\";\r\nimport Typist from \"react-typist\";\r\nimport {\r\n  FirstName,\r\n  LastName,\r\n  MiddleName,\r\n  devDesc,\r\n  icons,\r\n} from \"../../editable-stuff/configurations.json\";\r\n\r\nconst MainBody = () => {\r\n  // const [backgroundType, setBackgroundType] = useState(Configs.backgroundType);\r\n  const [hoverstatus, setHoverstatus] = useState(\r\n    new Array(icons.length).fill(\"socialicons\")\r\n  );\r\n\r\n  const toggleHover = (data) => {\r\n    const newhoverStatus = [...hoverstatus];\r\n\r\n    if (data.event === \"enter\") {\r\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\r\n      return setHoverstatus(newhoverStatus);\r\n    } else if (data.event === \"leave\") {\r\n      newhoverStatus[data.icon.id] = \"socialicons\";\r\n      return setHoverstatus(newhoverStatus);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"home\"\r\n        className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\r\n      >\r\n        <div id=\"stars\"></div>\r\n        <div className=\"container container-fluid text-center \">\r\n          <h1 className=\"display-1\">\r\n            {FirstName + \" \" + MiddleName + \" \" + LastName}\r\n          </h1>\r\n          <Typist className=\"lead\"> {devDesc}</Typist>\r\n          <div className=\"p-5\">\r\n            {icons.map((icon) => (\r\n              <a\r\n                key={icon.id}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={icon.url}\r\n                aria-label={`My ${icon.image.split(\"-\")[1]}`}\r\n              >\r\n                <i\r\n                  className={`fab ${icon.image}  fa-3x ${hoverstatus[icon.id]}`}\r\n                  onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\r\n                  onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\r\n                />\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainBody;\r\n","import React from \"react\";\r\nimport Profile from \"../../editable-stuff/Profile.jpg\"\r\n\r\nimport {\r\n  aboutHeading\r\n} from \"../../editable-stuff/configurations.json\";\r\nconst divStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'center'\r\n};\r\nconst AboutMe = () => {\r\n  return (\r\n    <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\" style={{backgroundColor:'#f7f7f7'}}>\r\n      <div className=\"container container-fluid\">\r\n        <div className=\"row\" style={divStyle}>\r\n            <div className=\"col-5 d-none d-lg-inline align-self-center\">\r\n              <img\r\n                className=\"border border-secondary rounded-circle\"\r\n                src={Profile}\r\n                alt=\"profilepicture\"\r\n                width=\"375\"\r\n                height=\"375\"\r\n              />\r\n            </div>\r\n            <div className=\"col d-lg-inline align-self-center\">\r\n            <h1 className=\"display-4 mb-5 text-center\">{aboutHeading}</h1>\r\n            <h4>Hello World! <span role=\"img\" aria-label=\"Emoji\">👋</span></h4>\r\n            <p className=\"lead\">\r\n              <span role=\"img\" aria-label=\"Emoji\">💼</span> I'm currently working as a Front-end developer and UI designer.<br></br>\r\n              <span role=\"img\" aria-label=\"Emoji\">💪</span> Learning Javascript and their frameworks<br></br>\r\n              <span role=\"img\" aria-label=\"Emoji\">🏠</span> Based in São Paulo - Brasil<br></br>\r\n              <span role=\"img\" aria-label=\"Emoji\">👩</span> Pronouns: <strong>She|Her|Ela</strong></p><br/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ProjectCard = ({ value }) => {\r\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\r\n\r\n  const handleUpdatetime = useCallback(\r\n    (e) => {\r\n      const date = new Date(value.pushed_at);\r\n      const nowdate = new Date();\r\n      const diff = nowdate.getTime() - date.getTime();\r\n      const hours = Math.trunc(diff / 1000 / 60 / 60);\r\n\r\n      if (hours < 24) {\r\n        return setUpdatedAt(`${hours.toString()} hours ago`);\r\n      } else {\r\n        const monthNames = [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ];\r\n        const day = date.getDate();\r\n        const monthIndex = date.getMonth();\r\n        const year = date.getFullYear();\r\n\r\n        return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\r\n      }\r\n    },\r\n    [value.pushed_at]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleUpdatetime();\r\n  }, [handleUpdatetime]);\r\n\r\n  const { name, description, svn_url, stargazers_count, languages_url } = value;\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\r\n        {/* <img src=\"\" className=\"card-img-top\" alt=\"...\" /> */}\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{name} </h5>\r\n          <p className=\"card-text\">{description} </p>\r\n          <a\r\n            href={`${svn_url}/archive/master.zip`}\r\n            className=\"btn btn-outline-secondary mr-3\"\r\n          >\r\n            <i className=\"fab fa-github\" /> Clone Project\r\n          </a>\r\n          <a\r\n            href={svn_url}\r\n            target=\" _blank\"\r\n            className=\"btn btn-outline-secondary\"\r\n          >\r\n            <i className=\"fab fa-github\" /> Repo\r\n          </a>\r\n          <hr />\r\n          <Language value={languages_url}></Language>\r\n          <p className=\"card-text\">\r\n            <span className=\"text-dark card-link mr-4\">\r\n              <i className=\"fab fa-github\" /> Stars{\" \"}\r\n              <span className=\"badge badge-dark\">{stargazers_count}</span>\r\n            </span>\r\n            <small className=\"text-muted\">Updated {updated_at}</small>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Language = ({ value }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleRequest = useCallback(\r\n    (e) => {\r\n      axios\r\n        .get(value)\r\n        .then((response) => {\r\n          // handle success\r\n          // console.log(response.data);\r\n          return setData(response.data);\r\n        })\r\n        .catch((error) => {\r\n          // handle error\r\n          return console.error(error.message);\r\n        })\r\n        .finally(() => {\r\n          // always executed\r\n        });\r\n    },\r\n    [value]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, [handleRequest]);\r\n\r\n  const array = [];\r\n  let total_count = 0;\r\n  for (let index in data) {\r\n    array.push(index);\r\n    total_count += data[index];\r\n    // console.log(index, this.state.data[index]);\r\n  }\r\n  // console.log(\"array contains \", array, this.state.data[array[0]]);\r\n\r\n  return (\r\n    <div className=\"pb-3\">\r\n      Languages:{\" \"}\r\n      {array.map((language) => (\r\n        <p key={language} className=\"badge badge-light card-link\">\r\n          {language}: {Math.trunc((data[language] / total_count) * 1000) / 10} %\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport {\r\n  projectHeading,\r\n  gitHubLink,\r\n  gitHubUsername,\r\n  gitHubQuerry,\r\n  projectsLength,\r\n} from \"../../editable-stuff/configurations.json\";\r\n\r\nconst Project = () => {\r\n  const [projectsArray, setProjectsArray] = useState([]);\r\n\r\n  const handleRequest = useCallback((e) => {\r\n    axios\r\n      .get(gitHubLink + gitHubUsername + gitHubQuerry)\r\n      .then((response) => {\r\n        // handle success\r\n        // console.log(response.data.slice(0, 4));\r\n        return setProjectsArray(response.data.slice(0, projectsLength));\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        return console.error(error.message);\r\n      })\r\n      .finally(() => {\r\n        // always executed\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, [handleRequest]);\r\n\r\n  return (\r\n    <div id=\"projects\" className=\"jumbotron jumbotron-fluid m-0\" style={{backgroundColor:'#f7f7f7'}}>\r\n      {projectsArray.length && (\r\n        <div className=\"container container-fluid\" >\r\n          <h1 className=\"display-4 pb-5 text-center\">{projectHeading}</h1>\r\n          <div className=\"row\">\r\n            {projectsArray.map((project) => (\r\n              <ProjectCard key={project.id} id={project.id} value={project} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\n\r\n  const divStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  };\r\nconst Interests = () => {\r\n  return (\r\n    <div id=\"interests\" className=\"jumbotron jumbotron-fluid m-0\" style={{backgroundColor:'white'}}>\r\n      <div className=\"container container-fluid\">\r\n        <div className=\"row\">\r\n            <div className=\"col d-lg-inline align-self-center\">\r\n            <h1 className=\"display-4 pb-4 text-center\">Interests</h1>\r\n            {<p className=\"lead text-center\">\r\n              Outside of web development, I love to do pilates and read!\r\n            </p>}\r\n            <div className=\"row\" style={divStyle}>\r\n                <div className=\"col text-center\" >\r\n                  <p className=\"lead text-center\" style={{fontSize:'28px'}}>Pilates</p>\r\n                  <img alt=\"Pilates icon\" src=\"https://img.icons8.com/ultraviolet/128/000000/pilates.png\"/>\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                  <p className=\"lead text-center\" style={{fontSize:'28px'}}>Reading</p>\r\n                  <img alt=\"Book icon\" src=\"https://img.icons8.com/ultraviolet/128/000000/read.png\"/>    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Interests;\r\n","import React from \"react\";\r\n\r\n  const Footer = () => {\r\n  return (\r\n    <div id=\"contact\" className=\"jumbotron jumbotron-fluid m-0\" style={{backgroundColor:'#fff'}}>\r\n    <div className=\"container container-fluid\">\r\n          <div className=\"d-inline align-self-center\">    \r\n    <footer style={{backgroundColor:'#fff'}} className=\"mt-auto py-3 text-center\">\r\n      {<strong> &copy; 2021 </strong>}\r\n      <i className=\"fas fa-code\"></i> with <i className=\"fas fa-heart\"></i> by{\" \"}\r\n      <a\r\n        className=\"badge badge-dark\"\r\n        rel=\"noopener\"\r\n        href=\"https://github.com/clauprudente\"\r\n        aria-label=\"My GitHub\"\r\n      >\r\n       Cláudia Prudente\r\n      </a>{\" \"}\r\n      using <i className=\"fab fa-react\"></i>\r\n    </footer>\r\n    </div>\r\n      </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FirstName } from \"../editable-stuff/configurations.json\";\r\n\r\nconst Navbar = (props) => {\r\n  const [isTop, setIsTop] = useState(true);\r\n  useEffect(() => {\r\n    document.addEventListener(\"scroll\", () => {\r\n      const istop = window.scrollY < 200;\r\n      if (istop !== isTop) {\r\n        setIsTop(istop);\r\n      }\r\n    });\r\n  }, [isTop]);\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg fixed-top navbar-light ${\r\n        isTop ? \"bg-transparent\" : \"bg-gradient\"\r\n      } `}\r\n    >\r\n      <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + \"/#home\"}>\r\n        {`<${FirstName} />`}\r\n      </a>\r\n      <button\r\n        className=\"d-none navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarTogglerDemo02\"\r\n        aria-controls=\"navbarTogglerDemo02\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link lead\"\r\n              href={process.env.PUBLIC_URL + \"/#aboutme\"}\r\n            >\r\n              <b>About me</b>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link lead\"\r\n              href={process.env.PUBLIC_URL + \"/#interests\"}\r\n            >\r\n              <b>Interests</b>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link lead\"\r\n              href={process.env.PUBLIC_URL + \"/#projects\"}\r\n            >\r\n              <b>Projects</b>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n\r\nexport default Navbar;\r\n","import React, { Fragment } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport \"./App.css\";\r\nimport {\r\n  showNavigationbar,\r\n} from \"./editable-stuff/configurations.json\";\r\nimport MainBody from \"./components/home/MainBody\";\r\nimport AboutMe from \"./components/home/AboutMe\";\r\nimport Project from \"./components/home/Project\";\r\nimport Interests from \"./components/home/Interests\";\r\nimport Footer from \"./components/home/Footer\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <MainBody />\r\n      <AboutMe />\r\n      <Interests />\r\n      <Project />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst App = () => (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\r\n    {showNavigationbar && <Navbar />}\r\n    <Route path=\"/\" exact component={Home} />\r\n    {/* {showBlog && <Route path=\"/blog\" exact component={Blog} />}\r\n    {showBlog && <Route path=\"/blog/:id\" component={BlogPost} />} */}\r\n    <Footer />\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}